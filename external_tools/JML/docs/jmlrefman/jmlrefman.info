This is jmlrefman.info, produced by makeinfo version 4.8 from
jmlrefman.texinfo.

INFO-DIR-SECTION Programming & development tools
START-INFO-DIR-ENTRY
* JML Reference Manual: (jmlrefman).  Reference for the Java Modeling Language.
END-INFO-DIR-ENTRY

   Copyright (C) 2002-2007 by the authors

   Permission is granted for you to make copies of this manual for
educational and scholarly purposes, and for commercial use in
specifying software, but the copies may not be sold or otherwise used
for direct commercial advantage; this permission is granted provided
that this copyright and permission notice is preserved on all copies.
All other rights reserved.

   Version Information:  @(#) $Id: jmlrefman.texinfo,v 1.231 2008/05/13
20:54:59 leavens Exp $


Indirect:
jmlrefman.info-1: 757
jmlrefman.info-2: 300235
jmlrefman.info-3: 500879

Tag Table:
(Indirect)
Node: Top757
Node: Introduction8279
Node: Behavioral Interface Specifications10496
Node: A First Example14543
Ref: A First Example-Footnote-125101
Ref: A First Example-Footnote-225245
Ref: A First Example-Footnote-325300
Ref: A First Example-Footnote-425524
Node: What is JML Good For?25760
Node: Status and Plans for JML32561
Node: Historical Precedents33454
Node: Acknowledgments39094
Node: Fundamental Concepts40593
Node: Types can be Classes and Interfaces41140
Node: Model and Ghost41763
Node: Lightweight and Heavyweight Specifications44918
Node: Privacy Modifiers and Visibility46040
Node: Instance vs. Static52896
Node: Locations and Aliasing54349
Ref: Locations and Aliasing-Footnote-155392
Node: Expression Evaluation and Undefinedness55497
Node: Null is Not the Default57612
Node: Language Levels59776
Ref: Language Levels-Footnote-164439
Node: Level 0 Features64644
Node: Level 1 Features72542
Node: Level 2 Features77159
Node: Level 3 Features80567
Node: Level C Features81204
Node: Level X Features82014
Node: Syntax Notation82666
Node: Lexical Conventions84757
Node: White Space85923
Node: Lexical Pragmas86730
Node: Comments87621
Node: Annotation Markers89362
Node: Documentation Comments91389
Node: Tokens94669
Node: Compilation Units106525
Node: Package Definitions110223
Node: Import Definitions110750
Node: Type Definitions112644
Node: Class and Interface Definitions113461
Node: Subtyping for Type Definitions114819
Node: Modifiers for Type Definitions117994
Node: Modifiers121117
Node: Suggested Modifier Ordering122967
Node: Spec Public124192
Node: Spec Protected124583
Node: Pure125123
Node: Model125656
Node: Ghost126836
Node: Instance127871
Node: Helper128076
Node: Monitored128675
Node: Uninitialized129060
Node: Math Modifiers129457
Node: Nullity Modifiers129647
Node: Class and Interface Member Declarations130447
Node: Java Member Declarations131285
Node: Method and Constructor Declarations131973
Node: Formal Parameters133696
Node: Model Methods and Constructors135303
Node: Pure Methods and Constructors136691
Node: Helper Methods and Constructors143658
Node: Field and Variable Declarations144451
Node: JML Modifiers for Fields146508
Node: Type-Specs148429
Node: Class Initializer Declarations149279
Node: Type Specifications151473
Node: Introductory ADT Specification Examples153280
Node: Invariants153657
Node: Static vs. instance invariants165166
Ref: Static vs. instance invariants-Footnote-1167510
Node: Invariants and Exceptions167573
Node: Access Modifiers for Invariants168851
Node: Invariants and Inheritance170471
Node: Constraints171226
Node: Static vs. instance constraints176390
Node: Access Modifiers for Constraints177870
Node: Constraints and Inheritance178288
Node: Represents Clauses178882
Node: Initially Clauses181773
Node: Axioms182349
Node: Readable If Clauses182744
Node: Writable If Clauses183242
Node: Monitors For Clause183757
Node: Method Specifications184742
Node: Basic Concepts in Method Specification186401
Node: Organization of Method Specifications186825
Node: Access Control in Specification Cases189994
Node: Lightweight Specification Cases191877
Node: Heavyweight Specification Cases197736
Node: Behavior Specification Cases198617
Node: Semantics of flat behavior specification cases201364
Node: Non-helper methods202322
Ref: Non-helper methods-Footnote-1211700
Node: Non-helper constructors211784
Node: Helper methods and constructors212499
Node: Semantics of nested behavior specification cases213381
Node: Normal Behavior Specification Cases214692
Node: Exceptional Behavior Specification Cases216282
Node: Pragmatics of Exceptional Behavior Specification Cases217665
Node: Method Specification Clauses222054
Node: Specification Variable Declarations222829
Node: Forall Variable Declarations223459
Node: Old Variable Declarations224450
Node: Requires Clauses225428
Node: Ensures Clauses227768
Node: Signals Clauses230301
Node: Signals-Only Clauses233717
Node: Parameters in Postconditions238219
Node: Diverges Clauses241295
Node: When Clauses243566
Node: Assignable Clauses244676
Node: Accessible Clauses247219
Node: Callable Clauses248645
Node: Measured By Clauses249575
Node: Captures Clauses250360
Node: Working Space Clauses252206
Node: Duration Clauses254012
Node: Data Groups256012
Node: Static Data Group Inclusions258158
Node: Dynamic Data Group Mappings258741
Node: Predicates and Specification Expressions260173
Node: Predicates260832
Node: Specification Expressions261282
Node: Expressions262016
Node: JML Primary Expressions267518
Node: Backslash result269665
Node: Backslash old and Backslash pre270229
Node: Backslash not_assigned275008
Node: Backslash not_modified276633
Node: Backslash only_accessed278330
Node: Backslash only_assigned279818
Node: Backslash only_called281323
Node: Backslash only_captured282235
Node: Backslash fresh284106
Node: Backslash reach285002
Node: Backslash duration286047
Node: Backslash space287627
Node: Backslash working space288450
Node: Backslash nonnullelements289711
Node: Informal Predicates290436
Node: Backslash typeof291235
Node: Backslash elemtype292416
Node: Backslash type293232
Node: Backslash lockset294214
Node: Backslash max294684
Node: Backslash is_initialized295403
Node: Backslash invariant_for295956
Node: Backslash lblneg and lblpos296511
Node: Quantified Expressions297920
Node: Universal and Existential Quantifiers300235
Node: Generalized Quantifiers301160
Node: Numerical Quantifier303278
Node: Executability of Quantified Expressions303900
Node: Modifiers for Bound Variables305504
Node: Quantifying over Reference Types306571
Node: Set Comprehensions307170
Node: JML Operators309599
Node: Subtype operator310061
Node: Equivalence and Inequivalence Operators310940
Node: Forward and Reverse Implication Operators312137
Node: Lockset Ordering313534
Node: Store Refs314529
Node: Statements and Annotation Statements316014
Node: Local Declaration Statements318450
Node: Modifiers for Local Declarations318936
Node: Loop Statements321344
Node: Loop Invariants324298
Node: Loop Variant Functions326526
Node: Assert Statements328145
Node: JML Annotation Statements330366
Node: Assume Statements331297
Node: Set Statements332137
Node: Refining Statements333174
Node: Unreachable Statements336759
Node: Debug Statements337583
Node: Hence By Statements339727
Node: Redundancy340346
Node: Redundant Implications and Redundantly Clauses341506
Node: Redundant Examples346404
Node: Model Programs350187
Node: Ideas Behind Model Programs350845
Node: Extracting Model Program Specifications356013
Node: Details of Model Programs356571
Node: Nondeterministic Choice Statement357537
Node: Nondeterministic If Statement358223
Node: Specification Statements359182
Node: Continues Clause361971
Node: Breaks Clause362655
Node: Returns Clause363252
Node: Specification for Subtypes363883
Node: Method of Specifying for Subclasses366367
Node: Code Contracts366689
Node: Refinement368578
Node: File Name Suffixes369784
Node: Using Separate Files370945
Node: Refinement Chains375003
Node: Type Checking Refinements378942
Node: Refinement Viewpoints385605
Node: Default Constructor Refinement386522
Node: MultiJava Extensions to JML390433
Node: Augmenting Method Declarations390964
Node: MultiMethods391930
Node: Universe Type System392581
Node: Basic Concepts of Universes395963
Node: Rep and Peer397463
Node: Readonly401204
Node: Ownership Modifiers for Array Types401934
Node: Default Ownership Modifiers403371
Node: Ownership Type Rules407734
Node: Ownership Subtyping408091
Node: Ownership Typing for Expressions409522
Node: Casts and Ownership Types412674
Node: Safe Math Extensions413951
Node: Backslash bigint414181
Node: Backslash real414362
Node: Deprecated and Replaced Syntax414510
Node: Deprecated Syntax415334
Node: Replaced Syntax415568
Node: Grammar Summary416145
Node: Modifier Summary457822
Node: Type Checking Summary462936
Node: Verification Logic Summary463170
Node: Differences463409
Node: Differences Between JML and Other Tools463796
Node: Differences Between JML and ESC/Java2465063
Node: Differences Between JML and Java466795
Node: Non-null by Default467173
Node: Bibliography468736
Node: Example Index498101
Node: Concept Index500879

End Tag Table
