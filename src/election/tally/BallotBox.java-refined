package election.tally;

/**
 * @author Dermot Cochran
 * @copyright Systems Research Group and University College Dublin, Ireland.
 * @reviewer Joe Kiniry
 */ 

/** Data transfer structure for set of all valid votes */
public class BallotBox {
	  
  /** List of valid ballot papers */
  //@ public invariant \nonnullelements (ballots);

  /**
   * @constraint No two ballot IDs in a ballot box are the same.
   */
  /*@ public invariant uniqueness();
    @*/
  protected /*@ spec_public non_null @*/ Ballot[] ballots;
  
  /*@ ensures \result <==> (\forall int i, j;
    @                   0 <= i & i < numberOfBallots &
    @                   0 <= j & j < numberOfBallots &
    @                   i != j;
    @                   ballots[i].ballotID != ballots[j].ballotID);
    @
    @ public model pure boolean uniqueness() {
    @     for (int i=0; i < numberOfBallots; i++) {
    @         for (int j=0; j < numberOfBallots; j++) {
    @             if (i != j && ballots[i].ballotID == ballots[j].ballotID) {
    @                 return false;
    @             }
    @         }
    @      }
    @      return true;
    @ }
    @*/
    
  /**
   * @return the number of ballots in this ballot box.
   */
  //@ ensures 0 <= \result;
  public /*@ pure @*/ int size();

  // ...and therefore change the visibility of numberOfBallots to private
  // and abstract these invariants to use the pure method.

  //@ public invariant 0 <= numberOfBallots;
  //@ public initially numberOfBallots == 0;
  //@ public constraint numberOfBallots >= \old (numberOfBallots);
  private /*@ spec_public @*/ int numberOfBallots;
    
  public /*@ pure @*/ BallotBox();
}